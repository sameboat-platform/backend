name: Backend Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      checks: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Ensure wrapper & scripts are executable
        run: |
          chmod +x mvnw || true
          chmod +x scripts/check-migration-immutability.sh || true

      - name: Build & Test (with coverage)
        run: |
          ./mvnw -B -ntp clean verify

      - name: Upload JaCoCo HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco

      - name: Extract coverage summary
        id: coverage
        run: |
          LINE=$(grep -m1 -E '<counter type="INSTRUCTION"' target/site/jacoco/jacoco.xml || true)
          # Fallback if grep fails
          if [ -z "$LINE" ]; then echo "instr_covered=0" >> $GITHUB_OUTPUT; echo "instr_missed=0" >> $GITHUB_OUTPUT; exit 0; fi
          MISSED=$(echo "$LINE" | sed -E 's/.*missed="([0-9]+)" covered="([0-9]+)".*/\1/')
          COVERED=$(echo "$LINE" | sed -E 's/.*missed="([0-9]+)" covered="([0-9]+)".*/\2/')
          TOTAL=$((MISSED + COVERED))
          if [ "$TOTAL" -gt 0 ]; then PCT=$(( 100 * COVERED / TOTAL )); else PCT=0; fi
          echo "instr_covered=$COVERED" >> $GITHUB_OUTPUT
          echo "instr_missed=$MISSED" >> $GITHUB_OUTPUT
          echo "instr_total=$TOTAL" >> $GITHUB_OUTPUT
          echo "instr_pct=$PCT" >> $GITHUB_OUTPUT

      - name: Add PR comment with coverage (if PR)
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: coverage-report
          message: |
            **Coverage (Instructions)**: ${{ steps.coverage.outputs.instr_pct }}%  
            Covered: ${{ steps.coverage.outputs.instr_covered }} / ${{ steps.coverage.outputs.instr_total }}  
            (Missed: ${{ steps.coverage.outputs.instr_missed }})

      - name: Create coverage summary
        if: always()
        run: |
          echo "### Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "Instructions: ${{ steps.coverage.outputs.instr_pct }}% (covered=${{ steps.coverage.outputs.instr_covered }}, missed=${{ steps.coverage.outputs.instr_missed }})" >> $GITHUB_STEP_SUMMARY

